name: Python CI/CD + Docs Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies if requirements.txt exists
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found, skipping dependency installation."
          fi

      - name: Run tests if tests exist
        run: |
          if [ -d tests ] || [ -f test_*.py ]; then
            pytest || true
          else
            echo "No tests found, skipping."
          fi

  validate-docs:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate architecture.md
        run: |
          FILE="architecture.md"
          if [ ! -f "$FILE" ]; then
            echo "❌ architecture.md not found!"
            exit 1
          fi

          # Check for Mermaid diagram
          if ! grep -q "```mermaid" "$FILE"; then
            echo "❌ Mermaid diagram not found in architecture.md"
            exit 1
          fi

          # Check for footnote reference
          if ! grep -q "\[\^compliance-hc\]" "$FILE"; then
            echo "❌ Footnote [^compliance-hc] missing"
            exit 1
          fi

          # Check for inline deployment command
          if ! grep -q "uv deploy" "$FILE"; then
            echo "❌ Inline deployment command missing"
            exit 1
          fi

          echo "✅ architecture.md passed all checks"

  deploy-docs:
    needs: validate-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deployment Documentation
        run: |
          echo "Deployment command (documentation only): uv deploy qs4PQId-oEAt"
          echo "Make sure to include the guardrail token 4wdvd-kzdjc2it4-a4rc in commits."
